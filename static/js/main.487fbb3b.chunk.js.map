{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","concat","then","res","json","catch","Response","Error","FindMovie","addMovie","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","errorMessage","setErrorMessage","_useState7","_useState8","setQuery","handleSubmit","useCallback","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","newMovie","wrap","_context","prev","next","preventDefault","trim","abrupt","sent","movieData","Title","Plot","Poster","imdbID","t0","finish","stop","_x","apply","arguments","_Fragment","onSubmit","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","App","setMovies","some","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.487fbb3b.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { Movie } from './types/Movie';\nimport { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=43253584';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n\nexport function preparedMovieData(movieData: MovieData) : Movie {\n  return {\n    title: movieData.Title,\n    description: movieData.Plot,\n    imgUrl: movieData.Poster === 'N/A'\n      ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n      : movieData.Poster,\n    imdbId: movieData.imdbID,\n    imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}`,\n  };\n}\n","import React, { useCallback, useState } from 'react';\nimport classNames from 'classnames';\n\nimport './FindMovie.scss';\nimport { getMovie, preparedMovieData } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { ResponseError } from '../../types/ReponseError';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [query, setQuery] = useState('');\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setErrorMessage('');\n    setMovie(null);\n  };\n\n  const handleSubmit = useCallback(async (\n    event: React.FormEvent<HTMLFormElement>,\n  ) => {\n    event.preventDefault();\n\n    if (!query.trim()) {\n      setErrorMessage('Enter the movie title');\n      setMovie(null);\n\n      return;\n    }\n\n    setErrorMessage('');\n    setIsLoading(true);\n\n    try {\n      const newMovie = await getMovie(query);\n\n      if ((newMovie as ResponseError).Response === 'False') {\n        setErrorMessage((newMovie as ResponseError).Error);\n      }\n\n      setMovie(preparedMovieData(newMovie as MovieData));\n    } catch {\n      setErrorMessage('Fail with fetching data');\n      setMovie(null);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [query]);\n\n  const handleAddMovie = () => {\n    if (movie) {\n      addMovie(movie);\n    }\n\n    setQuery('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': errorMessage })}\n              value={query}\n              onChange={handleTitleChange}\n            />\n          </div>\n\n          {errorMessage && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button', 'is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && !errorMessage && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && !errorMessage && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\n\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    const isMovieAlreadyIn = movies.some(\n      movie => movie.imdbId === newMovie.imdbId,\n    );\n\n    if (!isMovieAlreadyIn) {\n      setMovies([...movies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}